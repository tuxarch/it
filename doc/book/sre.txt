Site Reliability Engeneering
2019
Бетси Бейер, Крис Джоунс


DevOps - сращивание процесса разработки и обслуживания
SRE - инженер по обеспечению надежности вычеслительных систем

40-90% - усилий приходится на поддержку, стабилизацию и обслуживание
существующего когда

"надежность — это наиболее важная характеристика любого продукта: система не будет успешной,
если с ней невозможно работать!"

Эволюция:
Сисадмины
Dev и Ops - увеличение трудозатрат, разрыва знаний и доверия


SRE - команда эксплуатации созданная программистом. Нанимаются программисты,
но со знанием Unix и сетей.
Знают инструменты автоматизации
50% времени - ручная работа: тикеты, дежурство.
Остальная часть разработка.

DevOps vs SRE
DevOps - обобщение, SRE - частынй случай DevOps 

"
команда SR-инженеров отвечает за доступность, время отклика, производительность, эффективность, управление изменениями, мониторинг, реагирование в аварийных и критических ситуациях и плани-
рование производительности для своих сервисов
"

Отвечают:
- Доступность
- Производительность
- Мониторинг


50% Времени тратят на операционное обслуживание и перенаправление избытка на
разработчиков, тестировщиков.
2 Операционных события за смену. В противном случае инженер не успевает
досканально проаназилировать событие. 
Документирование всех значимых инцедентов.


MTTR - среднее время восстановления после сбоя. Автоматизация решения
проблемы, руководство по проблеме решает время решения.


2. Среда разработки и эксплуатации
Дата центры соединены в кампусы.
Машины унифицированные, нет привелигированных тачек.

Собственная разработка сети на базе Клоза и Juptier.

Файловая система:
Физические диски
Реализация в ОС
Сolosus - распределенная кластерная ФС, реализующую репликацию и шифрования
БД - Bigtable NoSQL
   - Spanner SQL


Ceть - дешевые коммутаторы с центральными контроллерами занимающимся
маршрутизацией.

GSLB - глобальный балансировщик нагрузки.
Географическая балансировка DNS
Сервисы Youtube, etc
RPC балансировка


Chubby - API сервис блокирующий ресурсы, возможно целые дата-центры

Borgmon - мониторинг ресурсов кластера.

Используемое ПО:
Весь код многопоточный
Каждый сервер реализует диагностический HTTP
Реализация gRPC
protobuf - протокол сериализации

Перенаправление трафика между регионами в случае пиковых нагрузок или поломок.

Разграничение сервисов по функциям - быстрые, производительные


Бюджет ошибок - сумарный уровень для SRE и разработчиков
Желаемое - действительное - разница. 
Если процесс надежности падает - то прекращается разработка обновлений.


SLA
SLI - индикатор качества обслуживания
SLO - желаемое качество обслуживание

Использование процентилей, а не среднего значения для значений мониторинга


6. Мониторинг распределенных систем
Незабываем о мониторинге со стороны пользователя
Каждая метрика должна иметь свою передочиность


Каждое экстренное оповещение сегодня, отвлекает от системного улучшения
которое может быть сделанно завтра.


Польза от автоматизации не всегда очевидна.

Bazel - инструмент сборки исходников

Незачем комитить код, нужно сразу его удалять.

Дополнительные отгулы в случае переработки.

Безобвинительные отчеты - хитрая штука

Если случилась авария - то на вас не упало небо и вы не один....

Пишется отчет о каждом инцеденте

По инциденту создается чат, в каждом чате есть ответственный.
Открывать инцидент, когда требуется работа комманды, проблема долго не может
быть решена, страдают клиенты.
Передали решение инцедента другому отделу!

Главная цель недопустить повторения подобных ошибок.


Балансировка
DNS - roundrobin
VIP
cache функция для сохранения сессии
Консистентное хэширование - лучше чем хэш-функция
DSR - балансировка на уровне MAC

Инкапсуляция пакетов и пересылка их бэкенду, проблема с МTU и фрагментацией

Отклонение запросов при перегруженности
Отбрасывание трафика


Рекомендуется не менее 5 реплик для кворума.


Нужна система восстановления, а не резервного копирования

