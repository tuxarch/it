Функциональное программирование - программирование в выражениях.

Функция - часть кода к которой можно обратиться из другого места.

** DEF - LAMBDA - ** позволяют определить функции

Определение функции должно состоять из

     формальных параметров

     тела определения функции

Аргументы функции могут быть, обязательными, необязательными имеющими значение
по умолчанию. ei=7, и произвольное число аргументов *ро

Важно запомнить здесь, что есть 3 типа аргументов.

** Рекурсия - ** исполнение функции через себя.

в питоне существует ограничение на глубину рекурсии, для того чтобы его убрать
необходимо использовать setrecursionlimit(N) из модуля sys.

Функции высшего порядка это такие функции которые в качестве входных или
выходных параметров принимают другие функции. Функция есть одна из
разновидностей объекта.

apply() - применяет параметры к заданной функции.

xrange - объект, который работает также как range но не хранит в себе
элементы.

map - применение параметров для каждого элемента последовательности.

filter() - принимает два условия на вход, функцию и последовательность.

Списковые включение это объединение цикла for и вложенного if.

join() - используется для конкантенации списка.

reduce()

Итератор - объект обеспечивающий последовательный доступ к контейнеру.

sorted() - позволяет сортировать элементы строки, на выход подается массив
лист.

chain - позволяет объединять между собой итераторы.

itertools.repeat() - позволяет создать указанный объект повторяющийся
указанное количество раз.

itertools.count() - выдает целые числа указанные с заданного

cycle() - позволяет бесконечно повторять заданную последовательность

Генератор - такой объект в котором обработка проиходит только через обращение
к нему.

Ленивые вычисления (lazy computations) - вычисление происводящиеся по мере
надобности.



