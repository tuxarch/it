Прикладной python 
от 23 октября 2018
https://www.youtube.com/watch?v=oLN3-1UX0-A&t=891s


Пользоваться diff,
merge

pip install -r reqs.txt - установка зависимостей
pip freeze - список установленных пакетов

Python - ориентирован на читаемость и простоту программиста

Погуглить библиотеку которая делает 90% все работы.

bit_amount = 100_123_1000

Decimal - использовать для денег

type(varibl) - тип переменной

long = """ long streng

sadfasd""" - длинные строки

\ - перенос строки

Срезы 	[:] - все
	[:3]+[3:] - строка из кусков
	[::-1] - развернуть строку(шаг)

--Строки
string.captitalice() - в заглавный
.isspace() - строка состоит из пробелов

справка по элементам help(str)

все строки unicode32

byte_string = b'string' - байтовая строка для других кодировок

Форматирование строк два способа:
.format 
'Hello, %s %d' % (name, 1) - по типу данных

a = '  adf \n'
a.strip - убрать все пробелы

a = ' ----dffd'
a.strip.strip('-') - удалить лишние символы

replace('2', '') - заменить символ 2 на ничто

dir(varibles) - все поля обьекта вывести

Тернарный оператор
divmod - возвращает и результат деления и остаток

and, or - спользование условных операторов

Структуры данных
list , temple, dict, set, frozenset

list  = (), list()

добавление 	.append - вконец
		.insert(0,'dd') - позицию 0
		.extend() - обьединение двух списков
удаление 	del lis(1)
		.remove(4)

Множество:set 

--Функции
help(meth)
.__name__ - вернет имя
.__doc__ - описание данной функции """"""


Аргумент по умолчанию, будет меняться поэтому нужно делать его none и потом
изменить.
распаковка *varibles использыется для передачи параметров
** для именнованых переменных

raise Exeption - вызвать исключение


-- Генератор 
range
Генератор используется один раз
yeild l

3. Лекция Модули
узнать PYTHONPATH
import sys, sys.path
pythonpath - определяется поставщиком пакета

sys.path.append - добавить путь для библиотек
или использовать PYTHONPATH переменную

изменить имя модуля
import name as namenew
Использование каталог и __init.py__

-- Класс
class TimeClass:
	pass


Классы с большой буквы, методы с маленькой

Конструктор метод def __init__(self)
первым делом передается вызвавший объект
атрибуты - они же переменные можно легко добавить, но стараются обьявлять в
самом классе

