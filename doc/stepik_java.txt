Есть примитивные типы:

int, long, short, byte
char
boolean
float,double

Переменные объявляются явно.  Примитивы это ячейка памяти, в них нет полей и
методов.

Ссылочные переменные представляют собой ячейку памяти содержащую ссылку на
объект. При копировании объекта происходит копирование ссылки

Пустая ссылка = null.

В отличии от ссылок в Си адресами ссылок мы не можем манипулировать в своих
вычеслениях.

boolean - логический тип.

Операции сравнения < > >= <= != ==. Результатом сравнение может быть значения
boolean.

Логические операции:
отрицание !
коньюнкиция - и - && 
дизъюнкция - или = || 
исключающая или ^

&& - сокращенная форма, следующее условие проверять не надо.
Полная схема &. вычисляется все выражение.

сокращенный вариант |=, &=, ^=

Переполнение переменной - данные скидываются в ноль

char - 16 бит
может быть знаковым и хранит код символа.
utf- кодировка

float - 32, double - 64 бита

BigInteger, BigDecimal - работа с большими числами

___________________
Преобразование типов

Более простые легко конвертируется.
От большего к меньшему данные просто отбрасываются.
Автоматическое расширение

Классы обертки для каждого примитвного типа
Для хранения коллекции

valueOf - обернуть значение
intValue - вернуть примитив
parseLong - привести к числу
toString - привести к строке


________________

Объявление - выделяется ячейка для ссылки на объект
new - создает объект
Когда ссылка перестает ссылаться на объект. То он удаляется 

многомерность - моделируется одномерными массивами
... - множественное 
equels - сравнение объектов
Arrays.equels - сравнение элементов массива
deepequels - сравнение для многомерных массивов
toString - распечатать массив
deeptoString - 
строка это не массив символов. Длинна строки хранится в отдельном поле

конкатенация это stringbuilder метод 

char + char = int

Тернарный оператор 
for (mass: arg) - сокращенная форма 
_______________
Объектно-ориентированный стиль программирования

Объект имеет свой класс.
Класс - это общее описание для объектов.
Объект есть конкретный элемент класса.

пакеты

import java.lang.* - пакет по умолчанию.

final - от класса нельзя наследоваться
final - нельзя переопределять и изменять поля

static - хотябы один метод. psvm
static поля независят от экземпляров класса. А исполняется в классе поэтому не
имеет доступа к полям и методам экземпляра.
static final - для констатнт

ArrayList - массив с динамическим изменением размера

Перечисления enum - полноценный ссылочный тип.Эквивалент public static своего
рода класс. Автоматические методы name, ordinal - номер элемента, values -
массив значений.
@Deprecated - аннотации устарел и можно заменить на .. Сообщение на 
@SuppressWarnings - отключение на подозрительные места

Класс Object 
super - вызвать конструктор родителя

Зачем переопредилять hashcode & equals 
alt+insert - переопределить методы
значение hascode ограниченно значением int

Одинаковые объекты это объекты одного класса с одинаковыми полями

new - порождает новый объект в памяти

equals - вернет true только если ссылки указывают на один объект. Без учета
содержимого полей.Сравнивает только ссылки
hashcode - по умолчанию выводит случайное число

abstarct - нельзя создавать копии. Интерфейс имеет публичные и абстрактные
методы. Интерфейсы как попытка использовать множественное наследование.

Функциональный интерфейс имеет только один абстрактный метод.

Анонимный класс - класс не имеющий своего имени

В java8 в интерфейсе можно создавать дефолтный метод

KeywordAnalyzer
SpamAnalyzer - спам по наличию слов
NegativeTextAnalyzer по смайликам :(  =( :| 
TooLongTextAnalyzer - длинные макс лендж
