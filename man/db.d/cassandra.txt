Много маленьких нод - лучше чем много больших

Особенности:
Локальное kv
Шардирование по узлам
Перенаправление запросов по другим нодам

Tombstone - маркер на удаленые данные

Repair - удаление помеченных файлов, или восстановление консистентного
состояния

Столбцовая база данных.
CQL - похожий синтакс SQL

Недопускайте large partition

peer-to-peer - архитектура

Подключаемся к любой из нод

Разделение шардов:
По ранжу ключей
По хэш-функции

Разные настройка на работу с данными
Кворум на запись,
Быстрота на запись 
Быстрота на чтение

Важно иметь синхронизацию времени на нодах

Много устройств которые пишут данные

Сначало пишем данные в память - при увеличении пикового значения скидывается
на диск.

Join - операция не реализованна

=== Установка
curl https://www.apache.org/dist/cassandra/KEYS | sudo apt-key add -
echo "deb http://www.apache.org/dist/cassandra/debian 39x main" |  tee /etc/apt/sources.list.d/cassandra.list
apt update 
sudo apt install cassandra ntp

Порты которые использует касандра 7199 -jmx, 7000 - internode, 9042 - cql 


nodetool status - проверить статус кластера (показывает только доступные)

cqlsh 192.168.13.145 - подключаемся к ноде
DESCRIBE KEYSPACES - смотрим базы
create keyspace example with replication ={'class':'SimpleStrategy','replication_factor':2}; - создаем базу
use example - подключаемся к базе
create table my_table ( id int primary key, description text ); - создаем
таблицу
DESCRIBE TABLES; - смотрим таблицы

insert into my_table (id, description) values (1,'Item 1'); - создаем запись
select * from my_table - вывести записи 
