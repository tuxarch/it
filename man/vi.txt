hjkl - перемещение в режиме normal mode
x - позволяет в режиме просмотра удалять символ
:wq - сохранить изменения в файле
i-ввод начиная с первого символоа
a - ввод после символа
A - ввод с конца строки
_________________________________________________
d - ключ удаления
dw - удалить слово в NM
d$ - удалить строку начиная с выбранного символа
dG - удалить до конца файла (ВСЕ)

d2w - удалить два слова 
d2$ - удалить две строки начиная с данного символа
dd - удалить всю строку
2dd - удалить 2 строки
2dd - удалить 2 строки

w - слово с пробелом
e - слово без пробела
$ - строка начиная с символа и до конца строки
^ - строка удаляет все, что было до символа

2w - перемещение к началу 2 слова
2е - перемещение к концу 2 слова
________________________________________________

u - отмена 
U - отмена всех изменений строки
Ctrl-r - отмена отмены
______________________________________

p - вставка последнего удаленного объекта

r - замена символа на вновь введенный
R - замена следующих символов

ce - позволяет менять окончание в слове
______________________________________________

ctrl+g - выводит информацию о редактируемом файле
shift+g - перемещение к заданной строке
gg - переход к началу файла
______________________________________________

/ - организует поиск
? - организует поиск к началу текста 
n - поиск следующего повторения
N - поиск предыдущего повторения
CTRL-O - переход к предыдущему повторению
CTRL-I - возврат
Также возможно изменить регистр поиска
:set ic - игнорировать регистр
:set hls is - подсветить
:set noc - отлючить регистр поиска
:set nohslsearch -отключить подсвеченное
__________________________________________

Поиск парных скобок 
указываем скобку затем нажимаем знак %
__________________________________________

:s/было/стало/g - замена слова во всей строке.
наберите  :#,#s/было/стало/g  где #,# -- номера этих строк.
наберите  :%s/было/стало/g    для замены всех вхождений во всем файле.
наберите  :%s/было/стало/gc   для поиска всех вхождений во всем файле и запроса подтверждения замены.
__________________________________________   
Чтобы исполнить внешнюю команду необходимо набрать :!
v - позволяет сделать выделенoе а затем сохранить его
копировать y - вставить p - при выборе в визуальном режиме.
yw - копировать одно слово
:r NAME_FILE - позволяет вставить файл
:r !ls - вставить выведенное командой
__________________________________________   

o - позволяет создать новую строку после текущей
O - создать строку выше текущей

_________________________________________   
:e - позволяет создать новый файл
Сtrl-D - позволяет использовать автокомплит
tab - переключение автокомплита
:set number
:set nonumber

_____________________________________________

Файл настройки: ~/.vimrc  
Можно редактировать файлы через сеть, например  
:e &lt;scp|ftp|ftps&gt;://user@host/path/to/the/file.txt  
:Ex или :e ./ - файловый менеджер  
  
== Основы ==  
hjkl                      перемещение в разные стороны  
i                         режим вставки  
I                         добавление в начало строки  
a                         режим добавления  
A                         добавление в конец строки  
o                         добавить строку сразу за текущей  
O                         добавить строку перед текущей  
R                         писать поверх имеющегося текста  
u, :u\[ndo\]                отмена предыдущего действия \(undo\)  
CTR-R, :red\[o\]            отмена отмены предыдущего действия \(redo\)  
dd                        вырезать \(удалить\) строку  
cc                        удалить и начать редактирование  
yy                        копировать строку  
p                         вставить из буфера обмена  
&lt;n&gt;d                      удалить n+1 строку  
&lt;n&gt;y                      скопировать n+1 строку  
ESC                       перейти в режим просмотра  
DEL                       удалить следующий символ  
:&lt;n&gt;                      перейти на строку \#n  
%                         перейти к парной скобке  
:e &lt;fname&gt;                редактировать файл  
:w \[fname\]                записать изменения  
:wa                       сохранить изменения во всех файлах  
:q                        выйти из редактора  
:q\!                       выйти из редактора, не сохраняя изменения  
:color &lt;name&gt;             выбор цветовой схемы. цветвые схемы:  
                            /usr/local/share/vim/vim72/colors/\*.vim  
:pwd                      текущий каталог  
:cd \[path\]                перейти в другой каталог  
:\!команда                 выполнить команду - man, git, и так далее  
                            стрелочками веерх и вниз можно автодополнять  
                            команды и искать по истории  
CTR+p или CTR+n           автоматическое дополнение текста  
                            \(в режиме редактирования\)  
CTR+r,=,&lt;expr&gt;            вставить выражение, например 5\*2 - 3  
                            \(в режиме редактирования\)  
CTR+u, CTR+d              Page Up / Page Down  
CTR+y, CTR+e              Перемотка вверх/вниз без движения курсора  
  
== Подсветка синтаксиса ==  
:syntax on                включить подсветку  
:syntax off               выключить подсветку \(по умолчанию\)  
  
== Перенос строк ==  
:set wrap                 разрешить word wrap \(по умолчанию\)  
:set nowrap               запретить word wrap  
  
== Печать ==  
:ha\[rdcopy\]                   распечатать документ  
:set printoptions=duplex:off  отключить двустороннюю печать  
  
== Сворачивание ==  
zc                        свернуть блок  
zo                        развернуть блок  
zM                        закрыть все блоки  
zR                        открыть все блоки  
za                        инвертирование  
zf                        см :set foldmethod=manual  
:set foldenable           включить свoрачивание  
:set foldmethod=syntax    сворачивание на основе синтаксиса  
:set foldmethod=indent    сворачивание на основе отступов  
:set foldmethod=manual    выделяем участок с помощью v и говорим zf  
:set foldmethod=marker    сворачивание на основе маркеров в тексте  
:set foldmarker=bigin,end задаем маркеры начала и конца блока  
  
== Маркеры ==  
ma                        установить локальный маркер a  
mB                        установить глобальный маркер B  
\`c                        перейти к локальному маркеру c  
\`0                        вернуться на позицию, на которой закончили  
                            работу при закрытии vim  
:marks                    просмотр маркеров  
set viminfo='1000,f1      маркеры пишутся в ~/.viminfo, восстанавливаясь  
                            при следующем запуске vim. маркер " хранит  
                            последнюю позицию курсора в файле  
== Сессии ==  
mksession file.session    сохранить текущую сессию  
source file.session       восстановить ранее сохраненную сессию  
  
== Макросы ==  
qa                        записать макрос с именем a  
q                         в режиме записи макроса: закончить запись  
@a                        выполнить макрос с именем a  
@@                        повторить последний макрос  
  
== Регистры ==  
"ayy                      скопировать строку в регистр a  
"bdd                      вырезать строку и поместить в регистр b  
"С2d                      вырезать три строки и дописать в конец  
                            регистра C  
:reg \[name1\]\[name2\]\[...\]  просмотреть содержимое регистров  
  
== Выделение ==  
v + hjkl                  выделение текста  
SHIFT + v                 выделить строку  
CTR + v                   выделение прямоугольника  
p                         вставить  
y                         копировать  
d                         удалить  
gu                        к нижнему регистру  
gU                        к верхнему регистру  
  
== Отступы ==  
\[\#\]&gt;                      сдвинуть выделенное вправо  
\[\#\]&lt;                      сдвинуть выделенное влево  
\[\#\]&gt;&gt;                     сдвинуть строку вправо  
\[\#\]&lt;&lt;                     сдвинуть строку влево  
set tabstop=\#             для табуляции используется \# пробелов  
set shiftwidth=\#          в командах отступа используется \# пробелов  
set \[no\]expandtab         заменять ли табуляцию на соответствующее  
                            число пробелов  
  
== Поиск и замена в файле ==  
/Выражение               поиск выражения в файле  
\cВыражение              поиск без учета регистра  
n                        следующее совпадение  
N                        предыдущее совпадение  
:%s/foo/bar/gi           замена строк, см http://eax.me/regular-expr/  
  
== Нумерация строк ==  
:set number              включить нумерацию строк  
:set nonumber            отключить нумерацию строк  
  
== Работа с вкладками \(a.k.a табами\) ==  
:tabnew \[fname\]          создать таб  
:tabs                    вывести список табов  
:tabn                    следующий таб  
:tabp                    предыдущий таб  
&lt;n&gt;gt                    перейти на таб \#n  
gt                       следующий таб  
gT                       предыдущий таб  
:tabm +1                 переместить таб вперед на одну позицию  
:tabm -1                 переместить таб назад на одну позицию  
:tabm 2                  переместить таб на заданную позицию  
                           \(нумерация начинается с нуля\)  
  
== Работа с окнами ==  
:split    :sp               горизонтальное разбиение  
:vsplit   :vs               вертикальное разбиение  
Ctr+W, затем  
  Ctrl+W		 переключить на другое окно
  с                      закрыть окно  
  +-                     изменение высоты текущего окна  
  &lt;&gt;               изменение ширины текущего окна  
  =                      установить равный размер окон  
  hjkl или стрелочки     перемещение между окнами  
  
== Проверка орфографии ==  
    mkdir -p ~/.vim/spell  
    cd ~/.vim/spell  
    wget http://ftp.vim.org/vim/runtime/spell/ru.koi8-r.sug  
    wget http://ftp.vim.org/vim/runtime/spell/ru.koi8-r.spl  
    wget http://ftp.vim.org/vim/runtime/spell/en.ascii.sug  
    wget http://ftp.vim.org/vim/runtime/spell/en.ascii.spl  
  
:set spell spelllang=ru,en       включить проверку орфографии  
:setlocal spell spelllang=en_us,ru_ru - (it work)
:set nospell                     выключить проверку орфографии  
\]s                               следующее слово с ошибкой  
\[s                               предыдущее слово с ошибкой  
z=                               замена слова на альтернативу из списка  
zg                               good word  
zw                               wrong word  
zG                               ignore word  
  
== Работа с кодировкой ==  
e ++enc=&lt;имя кодировки&gt;         Редактирование файла в ??? кодировке  
w ++enc=&lt;имя кодировки&gt;         Сохранить файл в новой кодировке  
set fileencodings=utf-8,koi8-r  Список автоматически определяемых  
                                  кодировок в порядке убывания  
                                  приоритета  
  
== Другое ==  
:set \[no\]wildmenu          При авто-дополнении в командной строке над  
                             ней выводятся возможные варианты  
:set list                  Отображать табуляцию и переводы строк  
q:                         История команд  
.                          Повторение последней команды

====Плагины===

junegunn/vim-plug ставим по инструкции через курл
идем за этим менеджером плагинов добавляем плагины с гита,
а затем обновляем их PlugInstall, Plugupdate

"----------------Plugins------------------------
"
" Specify a directory for plugins (for Neovim: ~/.local/share/nvim/plugged)
call plug#begin('~/.vim/plugged')

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
map <C-n> :NERDTreeToggle<CR>

" Initialize plugin system
call plug#end()

vimawesome.com - cайт со сборками плагина

===работа с окнами==
ctrl+w+n сделать горизонтальный сплит
CTRL+w+(jkl) - переключение между вкладками
ctrl+w shift+J - переместить окно
=======
____________
Для работки с русской расскладкой добавляем ~/.vimrc

set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0


Ctrl+6 или Ctrl+Shift+6 - переключение расскладки
__________________
Групповое комментирование или разкомментирование

ctrl+v - выделяем - shift+i - # - ESc // закомитить
ctrl-v - выделяем - x - удалить

удалить первые символы в строке по диапазону
:[range] s/^..[0-9]//
__________
команды
1,$ g/^$/ d - удалить пустые строки
%s/ .*// - удалить все символы после первого пробела
