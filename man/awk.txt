Работа с текстом и создание отчетов

awk '{ print }' /etc/passwd - распечатать содержимое файла

awk -F":" '{ print $1 " " $3}' /etc/passwd - указываем разделитель и печатаем первый
блок

awk -f myscript.awk myfile.in - создать скрипт awk

Пример скрипта читающего по разделителю
----------------------
#!/usr/bin/awk -f
BEGIN {
	FS=":"

{ print $1 }
----------------------

Блоки BEGIN and END - позволяют начальные и конечные параметры скрипта

/foo/ { print } - вывесть только строку с /foo/
_________
ключи
-F fs - cимвол разделитель для полей
-f file - имя файла со скриптом
-v var=value - задать переменную
-mf N - максимальное количество полей
-mr N - мак размер записей в файле данных

$ echo "My name is Tom" | awk '{$4="Adam"; print $0}' - замена

___________
Встроенные переменные 
ARGC — количество аргументов командной строки.
ARGV — массив с аргументами командной строки.
ARGIND — индекс текущего обрабатываемого файла в массиве ARGV.
ENVIRON — ассоциативный массив с переменными окружения и их значениями.
ERRNO — код системной ошибки, которая может возникнуть при чтении или закрытии входных файлов.
FILENAME — имя входного файла с данными.
FNR — номер текущей записи в файле данных.
IGNORECASE — если эта переменная установлена в ненулевое значение, при обработке игнорируется регистр символов.
NF — общее число полей данных в текущей записи.
NR — общее число обработанных записей.




