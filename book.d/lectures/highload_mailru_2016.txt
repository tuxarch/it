HIGHLOAD курс от mail.ru 2017 год начало
https://www.youtube.com/playlist?list=PLrCZzMib1e9rZohs_FJg8MK52Ey494z40

Признаки высоких нагрузок:
Утилизация оборудования 50-70%
Запросы от 1000 в секунду


######################################################
2. Лекция
Толстые клиенты
Пуш-запрос - данные посылаются с сервера на клиент
Хорошая автономность, экономия трафиков и ресурсов сервера
Плохое обновление

Тонкий клиент - браузер
Те же приемущества и недостатки

Проблемы с ресурсами:
Память;
Процессор;
Диск;
Сеть.

Среднее количество памяти: 128Gb

Неэфективный алгоритм жрет cpu:
часто обращается в память
находится в блокировке
нет многопоточности

Диски
Доступ к диску 10мс
ЦПУ ждет обращение к диску
Чтение с hdd 90Mб, ssd 500мб - чтение последовательности
Запись hdd 90мбб ssd 140мб - запись последовательности
Чтение блоков по 4к hdd: 0,68 мб, ssd 63 мб/c
запись 4кбит блоков: hdd 0,36, sdd 19 мб/c

Если блоки расположенны в разных местах до тратиться 10мс

Сеть
Скорость в дата-центре 1mc (в 10 раз быстрее диска, слова автора)


Оптимизация:
процессор/память - больше памяти меньше процессора
		   сожмем данные на будем использовать цпу
Память/диск -  кэш/cвап
Процессор/диск - сжимаем данные

Пропускная способность/задержка - записываем пачкой или мгновенное обновление

Вертикальное масштабирование:
Нужна вместительнее база - купил больше дисков
Нужна производительнее программа - купил мощнее цп
Небольшие вложения, существует предел

Горизонтальное масштабирование:
Размазать по нескольким дешевым серверам
Тяжело масштабируются сервисы с состояниями (базы) statefull
Разделение по слоям (сервер вэб, сервер логики)
Разделение по функциям (сервер сообщений, сервер аутетификации, бд сообщенй)

Избыточность за счет дополнительного оборудования, 
информации для восстановления, 
избыточность действий сложность алгоритма


ACID (атомарнось,консистентность,)
Оптимизация базы данных:
Индексация
Короткие транзакции - блокировки
Денормализация - избыточность данных в таблицах
Минимум логики - отсутвие вычислений на cpu
  
CAP - теорема
Consistency - согласованность данных
Аvailability - доступность
Partion tolerance - устойчивость к разделению

Две вещи из трех,
Либо отказоустойчивостью либо консистентность

Мастер - слейв 
Слейв на чтение

Мастер - Мастер
Кворум мастеров на casandra

Оптимистичная блокировка

Удаление происходит с помощью метки,
Алгоритм физического удаления 

Кэш для отдачи данных из БД
Холодный старт - сохранять состояние кэша


Очереди
Масштабируемость
Низкое время обработки запроса
Эластичность
Отказоустойчивость

Хранение - память, диск, распределенные

Микросервисы
Быстрее отлаживать
Изоляция отказов

Падает производительность, сериализация для сети
Сложность отладки, сложность разработки
Сложность сбора логов, конфигурирования


##################################
Лекция 4. Сетевой стек.

Протоколы имеют больше уровней чем кажется

OSPF - рассылает все свои ip адреса на все интерфейсы

BGP - рассылает свои маршруты между сегментами сети
В пакетах также содержаться информация об отдаленности узла в сегменте


Bonding;
boand load balancing - два соединения между устройствами
bond fialover - два соединения, одно резервное


Настройка сетевой карты
ethtool

Фрагментация пакетов - pазделение ip пакетов на куски, склеиванием занимается
ЦП, но можно передать управление сетевой карте. offload

Распределить обработку пакетов на несколько очередей. multiqueue


Сетевой стэк linux

sysctl - около 400 сетевых настроек

ethtool -g eth0 - буфер на карте

Сокеты:
Указать размер сокета sysctl
Указать время жизни сокета

TCP_KORK - отправлять пакеты пачкой
TCP_NODELAY - отсылать сразу

ТСP_DEFER_ACCEPT - доступ к приложению только при передаче данных, а не
установлении соединения

TLS - на уровне ядра

User level TCP stack - tcp стэк на уровне приложения
DPDK, Netmap - реализация данной функции
Для примитивных действий может быть в 100 раз быстрее ядра. Привязывает
интерфейс и ядро ЦП под приложение

XDP - реализация данной функции на уровне ядра, ядро пропускает пакет
Работает в системе


TCP:
SYN - SYN+ACK - ACK
FIN - ACK - FIN - ACK - завершение соединения

RTT - round treep time
Передача трафика из точки A в Б, и назад в точку A

250ms - время передачи в Австралию

300ms - быстрая загрузка
1000ms - тормоза 
time в ping показывает rtt.



MTU - длинна пакета
MSS - полезная нагрузка

Подтверждение группы полученных пакетов 
cammulative acnowledgment
selective acknowledjmet - то что недошло

TCP окно в заголовке, данная характеристика может существенно увеличить
скорость до 400 GB

Размер IP пакета от 20 байт до 64 КБ

Почему тормозит сеть?
BBR - переполнение буферов

DNS
A - запись на ip
СNAME - указать на другой домен
NS - сервера ответственные за этот участок
MX - почтовый сервер

GLSB - балансировка dns

OPT - запись динамический ответ


HTTP - keepalive
http режет соединения после получения обьекта

HTTPS - увеличивает нагрузку на ЦП и время установки соединения

UDP - быстрый и тупой
Используется для туннелей, подтверждения получения пакетов на 7 уровне

QUIC реализует
TLS, http2, tcp на udp

TCP handshake - 1.5 rtt
TLS handshake - 2 rtt

##########################################
Лекция 5. Балансировка и маршрутизация.

DNS round robin
Тачка ходит по первому ip из списка, список измененный отдает сервер.

Балансировка L4 
LVS - linux virtual server 
Asymetric routing - Ответы идут в обход балансировщика

Принцип работы:
lo: loopback - обратная петля
bound - интерфейс
Таблица балансировки на балансировщике - пакеты летят на бонд - машина смотрит
в loopback на ip и берет трафик

Принцип2: если серверы-машины в разных VLAN
ipip - пакет в пакете
advmss - Определяет какой должен быть MTU на уровне TCP-настройки

Принцип3:
NAT
Трансляция ip адресов

VRRP - аналог carp для роутеров

Входящий роутер cisco nexus 7000
Source_hash - какому балансировщику отправлять трафик при поднятом Tcp
соединении
Надежность сетевое оборудование значительнее серверов

DNS,GLSB 
DNS смотри на датацентры и их состояние

CDN - content delivery network
CDN может ставить провайдер, тк ему это выгодно.

Утилизировать цпу до 100%


##########################################
Лекция 6. Процессоры и память

Многоядерная архитектура:
SMP - Много ЦП на одной шине
NUMA

Размер страницы 4кб
Hugepages - 2mb, 1gb

page/cache - операция записи проиходить через этот кэш
Запись происходит быстрее чтения
Система пишет в page/cache, через интервал времени вызывается функция fsflush


Устройство процесса:
stack - растет вниз
 ----- ulimit -c - ограничивает размер стэка
mmap - отображание файла на память
heap - выделяется командой мalloc
data app
code app


/proc/meminfo - что происходит с памятью
/proc/PID/status -
/proc/PID/maps -
/proc/vmstat

VMA - технология описание пространства на память

###################################
7. Хранилища данных

ssd
TRIM - очистка ячеек, может быть приоритетнее чтения и тормозить работу
Garbage collector
Wear living - выравнивание износа ячеек
Over-Provisioning - системная область на диске. Увеличить для лучшего
чтение\записи

3Dnand - многослойнойные ssd до 512 слоев

SATA/SCSI
SCSI - развивали для серверов. SAS - работа с очередями

NVMe - бешенная шина на PCIe

smartctl - команда для работы со smart

reloacated_sector - диску конец
current_pending_sector - количество секторов на релокацию. Т.е были потери
Темперетура до 65

ssd - набор smart не стандартизирован

btrfs - снапшоты, исбыточность, многодисковые конфигурации, свои рейды,
сжатие. Нет стабильности.

RAID0 - увеличение скорости кратно количеству дисков
RAID1 - 
RAID10 - RAID0 из двух RAID1. Запись ровна половине сумарной
производительности дисков. Чтение - сумарная производительность
RAID5 - 4 диска блок с чексуммой плавающий
RAID6 - 6 дисков две контрольные суммы. Можно потерять 2 диска

Рейды на ядре linux, могут быть производительнее если не используется работа с
чекблоками.


################################
8. JAVA в высоконагруженных системах

Прослойка в виде виртуальной машине

################################
9. Мониторинг

Проверка работоспособности
Профилактика отказов
Проверка загруженности

jira - система тикетов
confluence 

Zabix создает инцедент в jira

За месяц меняется 380 дисков
7 модулей памяти, 5 серверов

Проблемы с забиксом:
до 5 тыс обьектов все хорошо
не распределенная бд

Cacti - хорошая система построения графиков

Graylog2 - система сбора логов 
3-5 индикаторов на сервис


650 графиков в час - просмотр 
7000 графиков за смену

Поиск ананомалий на графике
sematext - система мониторинга шароварная

Посроение графоф чтобы яснее представлять картину с проблема
Самописная система сбора 

######################################
10. Облака

Управлять датацентром также как обычным компьютером
Купить стойку или купить виртуальные ресурсы в дц

3ГГЦ  - 3млрд циклов 

Структура памяти процесса
Pagetable лежит в памяти 
MMU - хардварное управление страницами
TLB - кэш с частоиспользуемыми адресами

Виртуальный адрес ищется сначало в TLB - 1 цикл
Если там нет 100 циклов к обращению к page Table

В виртуалках свои pagetable
Обьединение pagetable - для всех тачек

Минусы ВМ
Плохо работают на I/O

taskset -cp 0,4 - выделяем ядра для процесса

Cgroup - ограничивает файловый кэш
cpu quota - 
сpu shares - приоритетность группы


Виды виртуальных машин:
small, large

Без ssd гугл дешевле


Сетевые диски:
GCE: Persistent Disks, AWS: Elastic Block, Azure: Page Blobs
Локальные диски:
Резервные хранилища:
Amazon Glacier, Googlke storage Buckets,


BloB хранилища, хранищила как сервис:
S3 

Managed MySQL, Postgress

Cassandra - горизонтально масштабируемая база NoSQL

Балансировка по контенту /web /video /static - сервер идет искать ресурсы на
тачки

Балансировку можно разделить на два самых популярных уровня L4,L7.
 
##########################
11. Actor Model. Futures. Reactive
Джава от мудаков

#######################
16. Репликация

Копирование данных
Шардирование разнесение


Репликация с выделенным лидером.
Также репликация есть в системах очередей


Cинхронная репликация - что?Бла-бла
Асинхронаая репликация

Запись на лидера, чтение с фоловера

Как добавить нового slave
Берем последний снапшот, накладываем изменения,

При падении masterа должен быть выбран новый лидер.
