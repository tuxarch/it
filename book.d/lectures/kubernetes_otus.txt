DevOps. Практики и инструменты.
Курс от otus.ru 2017
==========================================



Kubernetes - платформа для koонтейнерной оркестрации.
Дальне развитиие проекта Borg от гугл. Сейчас гугл использует Оmega в
приватном использовании.
1.0 версия в 2015 году.

Kubernetes - платформа которая представляет интерфейс для управления
приложениями, сетями, хранилищами контейнерами.

Нет логирования, нет управление хостом, нет автобилдов. 

Openshift - функционал для полного цикла разработки, кроме гит. Логирование,
тестирование, разворачивание. Автоматом может создавать контейнеры.
Deis - управляем собранными контейнерами.

Kubernetes:
работаем с pod
Pod - группа контейнеров разделяющих общий network, fs, pid namespaces.
Общий localhost

Два контейнера в одном поде. Один отдает содержимое папки, а другой синкает ее
с git.

ambassador container - контейнер прокси
adapter container - контейнер для сбора логов

Архитектура kubernetes:

MASTER
* kube-controller-manager - читает etcd, смотрит обьекты следит за их
  консистенцией
* kube-scheduler - контролирует ресуры, распределяет поды, управления
  ограничения
* kube-API-Server - принимает входящие соединения от pod и пользователей, API
  для всех взаимодействий, REST-сервис, хранит все в etcd
Мастер ноды обьединяют друг друга через etcd

NODE
* docker, rkt, crio.
* kubelet - запускает pod, согласно данным PodSpec полученному от API-serv
* kube-proxy - настройка сети

В виде pod раскидать компоненты мастера

add-ons
kube-dns - сервис дескавери
dashboard -

Сетевой адданон - flanel/OpenvSwitch/Weave

Описание проекта YAML 
apiVersion: alpha, beta, stable
kind - тип обьекта Pod, Replicaset
metadata - описание обьекта, имя, label


Типы обьектов:
Deployment - позволяет организовать стретегию деплоя и отката
ReplicaSet - организовать определенное количество запущенных обьектов
StatefulSets - очередность запуска, конкретика
DaemonSet - запуск задачи на каждой ноде
Job - запуск pod
CronJobs - запуск по cron
Service - как общаться с нашим приложением
Ingress - пробрасываем внаружу

Проект состоит из 
- deployment/replicaset
- service
- ingress


Разворачивание
kubeadm - настраивает kubernetes, не работает с инфраструктурой
kubespray - ansible скрипты для любой инфраструктры
kops - для облачной инфраструктыры

Лекция 2. Модель безопасности.
Namespace - позволяет разделить кластер между пользователями
default, 
kube-system - 
kube-public

Identify Managment - 
Service Accounts - для задач
User Accounts - для людей
Подключаеются сертификаты, LDAP, Kerberos


Хранилище
LocalVolumes 
emptyDir - пустая директория
HostPah
local - цепляем диск
cloud Volumes
PersistentVolumes - для хранения данных

Helm - пакетный менеджер для k8s

Автоматизация написания манифестов

упаковка ресурсов в chart
reliase - выкатынный chart 

Выкатываем и откатываем деплоймент на подобии пакетного менеджера
